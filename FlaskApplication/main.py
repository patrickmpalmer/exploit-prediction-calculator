from flask import Flask, render_template, request
from keras.models import load_model
# from keras.backend import set_session 
# import tensorflow as tf    

app = Flask(__name__)

# global sess
# sess = tf.Session()
# set_session(sess)
global model
model = load_model('exploit_prediction_model.h5')
# global graph
# graph = tf.get_default_graph()

def split_vector_string(vector_string):
    cvss_ver = vector_string[5:8]
    if (cvss_ver not in ['3.0', '3.1']):
        print("Warning: the model is only trained on data from CVSS v3. Please input a CVSSv3 string")
        return ""
    av = vector_string[9:13]
    ac = vector_string[14:18]
    pr = vector_string[19:23]
    ui = vector_string[24:28]
    s = vector_string[29:32]
    c = vector_string[33:36]
    i = vector_string[37:40]
    a = vector_string[41:44]
    split_string = [cvss_ver, av, ac, pr, ui, s, c, i, a]
    return split_string

@app.route("/",methods=['POST','GET'])
def index():
    print("This is default page")
    if request.method == 'POST':
        textInput = request.form['vector_string']
        parsedInput = split_vector_string(textInput)
        print(textInput)
        print(parsedInput)
        if parsedInput == "":
            return render_template("index.html", error = "The string that you input is invalid!")
        return render_template("results.html", input = textInput)
    return render_template("index.html", error = "")

@app.route("/about")
def about():
    return render_template("about.html")
    
if __name__ == "__main__":
    app.run(host='0.0.0.0', port=50000, debug=True)